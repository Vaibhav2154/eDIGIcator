import axios from 'axios';
import asyncHandler from '../utils/asynchandler.utils.js'; // Assuming you have this utility
import ApiError from '../utils/API_Error.js'; // Error handling utility
import ApiResponse from '../utils/API_Response.js'; // Response formatting utility

// Define the endpoint for Gemini API
const GEMINI_API_URL = 'https://api.gemini.com/generate-mcqs'; // Replace with actual Gemini endpoint

const generateMCQs = asyncHandler(async (req, res) => {
  try {
    const { subject, chapter, numberOfQuestions = 5, difficulty  } = req.body;

    // Input validation
    if (!subject || !chapter) {
      throw new ApiError(400, 'Subject and chapter are required.');
    }

    // Request payload to send to Gemini API
    const payload = {
      subject, 
      chapter,
      numberOfQuestions,
      difficulty
    };

    // Call Gemini API to generate MCQs
    const { data } = await axios.post(GEMINI_API_URL, payload, {
      headers: {
        'Authorization': `Bearer ${AIzaSyC5I3IvJ_QnEsb28ncuwRgauLCwFLtp6pk}`, // Ensure you set your API key in the .env file
      },
    });

    // Check for successful response
    if (!data || !data.questions) {
      throw new ApiError(500, 'Failed to generate MCQs.');
    }

    // Send back the MCQs generated by Gemini
    res.status(200).json(new ApiResponse(200, data.questions, 'MCQs generated successfully.'));
  } catch (error) {
    console.error(error);
    res.status(error.status || 500).json({ error: error.message || 'An error occurred while generating MCQs.' });
  }
});

export { generateMCQs };
